/**
 * JUnit tests for SimpleLinkedList.
 *
 * @author Paul Hatalsky 
 * @version Lab 1
 */
import org.junit.*;
import static org.junit.Assert.*;
//import java.lang.reflect.*;

public class SimpleLinkedListTests {
   @Test
   public void testSize_empty() {
      SimpleLinkedList<Integer> list = new SimpleLinkedList<Integer>();
      assertEquals(0, list.size());
   }

   @Test(expected=IndexOutOfBoundsException.class)
   public void testAdd_atConstuctionOutOfBounds() {
      SimpleLinkedList<Integer> list = new SimpleLinkedList<Integer>();
      list.add(25, null);
   }

   @Test(expected=IndexOutOfBoundsException.class)
   public void testRemove_atConstruction() {
      SimpleLinkedList<Integer> list = new SimpleLinkedList<Integer>();
      list.remove(0);
   }

   @Test
   public void testAddSize() {
      SimpleLinkedList<Integer> list = new SimpleLinkedList<Integer>();

      list.add(5);
      list.add(10);
      list.add(15);
      list.add(3, 20);
      listEquals(list, new Integer[] {5, 10, 15, 20});
   }

   private void listEquals(SimpleLinkedList list, Object[] a) {
      assertEquals(a.length, list.size());
      for (int i = 0; i < a.length; i++) {
         assertEquals(a[i], list.get(i));
      }
   }
}